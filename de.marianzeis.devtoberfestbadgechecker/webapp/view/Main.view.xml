<mvc:View controllerName="de.marianzeis.devtoberfestbadgechecker.controller.Main" displayBlock="true"
	xmlns="sap.m"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:plugins="sap.m.plugins"
	xmlns:l="sap.ui.layout"
	xmlns:columnmenu="sap.m.table.columnmenu"
	xmlns:core="sap.ui.core" core:require="{
		formatter: 'de/marianzeis/devtoberfestbadgechecker/model/formatter'
	}">
	<Page title="Devtoberfest 2025 Badge Checker" showHeader="true">
		<l:Grid defaultSpan="L12 M12 S12" hSpacing="0" class="sapUiSmallMarginBegin">
			<VBox id="responsiveBox" width="{= ${device>/system/desktop} ? '60%' : '100%' }" justifyContent="Center" class="sapUiSmallMarginBegin sapUiNoMarginBottom" alignItems="Start">
				<VBox class="sapUiSmallMarginTop" justifyContent="Center" width="100%" alignItems="Start">
					<!-- Input field with label in one line -->
					<FlexBox alignItems="Center" wrap="NoWrap" width="100%" class="sapUiMediumMarginBottom">
						<Image src="{/avatar}" width="60px" height="60px" class="sapUiSmallMarginEnd" visible="{= ${/avatar} !== '' }" />
						<Label text="SAP Community ID" class="sapUiSmallMarginEnd" />
						<Input id="input" value="{/scnId}" placeholder="Enter scnId or scnUsername" width="90%" valueState="None" submit="onGetBadgesPress">
							<layoutData>
								<FlexItemData growFactor="1" />
							</layoutData>
						</Input>
					</FlexBox>

					<!-- Button area with wrapping enabled for mobile -->
					<FlexBox wrap="Wrap" alignItems="Start" class="sapUiSmallMarginBottom">
						<Button text="Get Badges" press="onGetBadgesPress" type="Emphasized" class="sapUiTinyMarginEnd sapUiTinyMarginBottom" />
						<CheckBox id="filterCheckbox" text="Filter Badges not yet received" selected="false" select="onFilterBadges" enabled="{= ${/badges}.length > 0 ? true : false }" class="sapUiTinyMarginBottom" />
					</FlexBox>

					<!-- Secondary buttons with wrapping -->
					<FlexBox wrap="Wrap" alignItems="Start" class="sapUiSmallMarginBottom">
						<Button text="Reset Sorting" press="onResetSort" class="sapUiTinyMarginEnd sapUiTinyMarginBottom" />
						<Button text="Go To Gameboard" press="onGoToGameboard" enabled="{= ${/scnId} !== ''}" class="sapUiTinyMarginEnd sapUiTinyMarginBottom" />
						<Button text="Go To Community" press="goToCommunity" class="sapUiTinyMarginEnd sapUiTinyMarginBottom" />
						<Button text="Go To GitHub Repo" press="goToRepo" class="sapUiTinyMarginEnd sapUiTinyMarginBottom" />
						<Button id="themeToggle" text="Toggle Theme" icon="sap-icon://palette" press="onToggleTheme" type="Transparent" tooltip="Toggle Dark/Light Mode" class="sapUiTinyMarginBottom" />
					</FlexBox>

					<!-- Status messages -->
					<VBox class="sapUiNoMarginBottom" width="90%">
						<Text id="status" text="{/text}" visible="{= ${/text} !== '' }" class="sapUiSmallMarginBottom" />
						<Text id="cutoffdate" text="Cut off Date reached. Every Badge received after 27 October 2024 midnight US Pacific time, does not count." visible="{= ${/currentDate} >= '204-10-27:00:00Z' }" />
					</VBox>
				</VBox>
			</VBox>
			<ScrollContainer height="100%" vertical="true" horizontal="false" class="sapUiNoMarginBegin sapUiTinyMarginEnd">
				<Table id="table" items="{
				path: '/badges',
				length: 1000,
				sorter : [{
					path : 'week',
					group : true
				}, {
					path : 'date',
					group : false
				}]}" class="sapUiResponsiveMargin">

					<columns>
						<Column id="displayName" headerMenu="menu" width="53%">
							<Text text="Badge Name" />
						</Column>
						<Column id="found" headerMenu="menu" width="30%">
							<Text text="Badge" />
						</Column>
						<Column id="points" headerMenu="menu" width="17%">
							<Text text="Points" />
						</Column>
						<Column id="day" width="17%" visible="{= ${device>/system/desktop} }" >
							<Text text="Day" />
						</Column>
						<Column id="type" width="17%" headerMenu="menu" visible="{= ${device>/system/desktop} }" >
							<Text text="Type" />
						</Column>
					</columns>

					<items>
						<ColumnListItem>
							<cells>
								<VBox>
									<Link text="{
										parts: [
											{path: 'displayName'},
											{path: 'device>/system/desktop'}
										],
										formatter: 'formatter.formatBadgeNameForMobile'
									}" href="{badgeURL}" target="_blank" visible="{= ${badgeURL} !== '' }" />
									<Text text="{
										parts: [
											{path: 'displayName'},
											{path: 'device>/system/desktop'}
										],
										formatter: 'formatter.formatBadgeNameForMobile'
									}" visible="{= ${badgeURL} === '' }" />
								</VBox>
								<VBox>
									<ObjectStatus text="{= ${found} ? 'received' : 'not received'}" icon="{= ${found} ? 'sap-icon://sys-enter-2' : 'sap-icon://sys-cancel-2'}" state="{= ${found} ? 'Success' : 'Error'}"/>
									<Text text="{
										path: 'earnedDate',
										formatter: 'formatter.formatEarnedDate'
									}" class="sapUiTinyMarginTop" visible="{= ${found} &amp;&amp; ${earnedDate} !== null &amp;&amp; ${device>/system/desktop} }" />
								</VBox>
								<Text text="{points}" />
								<Text text="{
									path: 'date',
									type: 'sap.ui.model.type.Date',
									formatOptions: {
										style: 'short',
										source: {
											pattern: 'yyyy-MM-ddTHH:mm:ss.sssZ'
										}
									}
								}" />
								<Text text="{type}" />
							</cells>
						</ColumnListItem>
					</items>

					<dependents>
						<plugins:ColumnResizer/>
						<columnmenu:Menu id="menu" beforeOpen="beforeOpenColumnMenu">
							<columnmenu:QuickSort change="onSort">
								<columnmenu:items>
									<columnmenu:QuickSortItem></columnmenu:QuickSortItem>
								</columnmenu:items>
							</columnmenu:QuickSort>
						</columnmenu:Menu>
					</dependents>
				</Table>
			</ScrollContainer>

		</l:Grid>
	</Page>
</mvc:View>
